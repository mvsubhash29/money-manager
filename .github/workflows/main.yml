# This is a basic workflow to help you get started with Actions

name: MoneyMangerCI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: check for linting formating and testing
    # The type of runner that the job will run on
    runs-on: macos-latest
    
    strategy:
      matrix:
        node_version: [14]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
        
      # Intall dependencies  
      - name: Install dependencies
        run: yarn install

      # Run formatting
      - name: Run the formatting
        run: yarn format
      
      # Run linting
      - name: Run the linting
        run: yarn lint

      # TODO: Deployment step should move to seperate file and happens only for master merge  
      # Build storybook
      - name: Build Storybook
        run: yarn build-storybook
          
      - name: Deploy Storybook
        uses: JamesIves/github-pages-deploy-action@3.6.2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: docs # The folder that the build-storybook script generates files.
          CLEAN: true # Automatically remove deleted files from the deploy branch
          TARGET_FOLDER: docs # The folder that we serve our Storybook files from
